import twilio from 'twilio';

let client = null;

// D√©sactiv√© temporairement jusqu'√† l'obtention des identifiants Twilio
console.warn('‚ö†Ô∏è Service SMS d√©sactiv√© - Identifiants Twilio non configur√©s');

// Fonction de remplacement pour les SMS
export const sendSMS = async (to, message) => {
  console.log('üì± SMS simul√©:', { to, message });
  return true;
};

// Envoyer un code de v√©rification par SMS
export const sendVerificationCode = async (phoneNumber, code) => {
  const message = `Votre code de v√©rification DUBON est: ${code}`;
  console.log('üì± Code de v√©rification simul√©:', { phoneNumber, code });
  return true;
};

// Envoyer une notification de commande par SMS
export const sendOrderNotificationSMS = async (phoneNumber, orderNumber) => {
  const message = `Votre commande #${orderNumber} a √©t√© confirm√©e. Merci de votre confiance !`;
  console.log('üì± Notification de commande simul√©e:', { phoneNumber, orderNumber });
  return true;
};

// Envoyer une alerte de livraison par SMS
export const sendDeliveryNotification = async (phoneNumber, orderNumber, estimatedTime) => {
  const message = `Votre commande #${orderNumber} est en cours de livraison. Temps estim√©: ${estimatedTime} minutes.`;
  console.log('üì± Notification de livraison simul√©e:', { phoneNumber, orderNumber, estimatedTime });
  return true;
};

// Envoyer une notification de promotion par SMS
export const sendPromotionNotification = async (phoneNumber, promoCode, discount) => {
  const message = `Utilisez le code ${promoCode} pour b√©n√©ficier de ${discount}% de r√©duction sur votre prochaine commande !`;
  console.log('üì± Notification de promotion simul√©e:', { phoneNumber, promoCode, discount });
  return true;
};

export default {
  sendSMS,
  sendVerificationCode,
  sendOrderNotificationSMS,
  sendDeliveryNotification,
  sendPromotionNotification
}; 